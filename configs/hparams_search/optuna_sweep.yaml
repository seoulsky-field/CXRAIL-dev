name: optuna
# params:
#   # _target_: omegaconf.OmegaConf.to_container

#   lr:
#     _target_: ${hparams_search.params.trial}.suggest_float
#     name: lr
#     low: 0.00001
#     high: 0.1
#     log: True

#   weight_decay:
#     # _target_: optuna.trial.Trial
#     # self: { trial }
#     _target_: ${hparams_search.params.trial}.suggest_float
#     name: weight_decay
#     low: 0.00001
#     high: 0.1
#     log: True

#   rotate_degree:
#     # _target_: optuna.trial.Trial.suggest_loguniform
#     # self: { trial }
#     _target_: ${hparams_search.params.trial}.suggest_loguniform
#     name: rotate_degree
#     low: 0
#     high: 15

#   batch_size:
#     # _target_: optuna.trial.Trial.suggest_categorical
#     # self: { trial }
#     _target_: ${hparams_search.params.trial}.suggest_categorical
#     name: batch_size
#     choices: [64, 128]
#   trial:
# # defaults:
#   - override hydra/sweeper: optuna
#   - override hydra/sweeper/sampler: tpe
#   # - hydra/sweeper: optuna
#   # - hydra/sweeper/sampler: tpe

# hydra:
#   sweeper:
#     #_target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
#     sampler:
#       seed: 123
#     direction: minimize
#     study_name: sphere
#     storage: null
#     n_trials: 20
#     n_jobs: 1
#     max_failure_rate: 0.0
#     params:
#       x: range(-5.5, 5.5, step=0.5)
#       y: choice(-5 ,0 ,5)

# rotate_degree: ${rotate_degree}
# lr: ${lr}
# batch_size: ${batch_size}
# weight_decay: ${weight_decay}

# sampler:
#   _target_: optuna.samplers.TPESampler
#   seed: 123
#   consider_prior: true
#   prior_weight: 1.0
#   consider_magic_clip: true
#   consider_endpoints: false
#   n_startup_trials: 10
#   n_ei_candidates: 24
#   multivariate: false
#   warn_independent_sampling: true
# _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
# direction: minimize
# storage: null
# study_name: sphere
# n_trials: 20
# n_jobs: 1
# max_failure_rate: 0.0
# params:
#   lr: interval(0.0001, 0.1)
#   weight_decay: interval(0.0001, 0.1)
#   rotate_degree: range(0, 5.5, step=0.5)
#   batch_size: choice(64, 128)
